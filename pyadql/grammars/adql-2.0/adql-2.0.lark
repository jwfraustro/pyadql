adql_language_character: SIMPLE_LATIN_LETTER
    | DIGIT
    | SQL_SPECIAL_CHARACTER

ABS: "ABS"i
ACOS: "ACOS"i
AREA: "AREA"i
ASIN: "ASIN"i
ATAN: "ATAN"i
ATAN2: "ATAN2"i
BOX: "BOX"i
CEILING: "CEILING"i
CENTROID: "CENTROID"i
CIRCLE: "CIRCLE"i
CONTAINS: "CONTAINS"i
COORD1: "COORD1"i
COORD2: "COORD2"i
COORDSYS: "COORDSYS"i
COS: "COS"i
DEGREES: "DEGREES"i
DISTANCE: "DISTANCE"i
EXP: "EXP"i
FLOOR: "FLOOR"i
INTERSECTS: "INTERSECTS"i
LOG: "LOG"i
LOG10: "LOG10"i
MOD: "MOD"i
PI: "PI"i
POINT: "POINT"i
POLYGON: "POLYGON"i
POWER: "POWER"i
RADIANS: "RADIANS"i
REGION: "REGION"i
RAND: "RAND"i
ROUND: "ROUND"i
SIN: "SIN"i
SQRT: "SQRT"i
TOP: "TOP"i
TAN: "TAN"i
TRUNCATE: "TRUNCATE"i

ADQL_RESERVED_WORD: ABS
    | ACOS
    | AREA
    | ASIN
    | ATAN
    | ATAN2
    | BOX
    | CEILING
    | CENTROID
    | CIRCLE
    | CONTAINS
    | COORD1
    | COORD2
    | COORDSYS
    | COS
    | DEGREES
    | DISTANCE
    | EXP
    | FLOOR
    | INTERSECTS
    | LOG
    | LOG10
    | MOD
    | PI
    | POINT
    | POLYGON
    | POWER
    | RADIANS
    | REGION
    | RAND
    | ROUND
    | SIN
    | SQRT
    | TOP
    | TAN
    | TRUNCATE

SQL_EMBEDDED_LANGUAGE_CHARACTER: LEFT_BRACKET
    | RIGHT_BRACKET

ABSOLUTE: "ABSOLUTE"i
ACTION: "ACTION"i
ADD: "ADD"i
ALL: "ALL"i
ALLOCATE: "ALLOCATE"i
ALTER: "ALTER"i
AND: "AND"i
ANY: "ANY"i
ARE: "ARE"i
AS: "AS"i
ASC: "ASC"i
ASSERTION: "ASSERTION"i
AT: "AT"i
AUTHORIZATION: "AUTHORIZATION"i
AVG: "AVG"i
BEGIN: "BEGIN"i
BETWEEN: "BETWEEN"i
BIT: "BIT"i
BIT_LENGTH: "BIT_LENGTH"i
BOTH: "BOTH"i
BY: "BY"i
CASCADE: "CASCADE"i
CASCADED: "CASCADED"i
CASE: "CASE"i
CAST: "CAST"i
CATALOG: "CATALOG"i
CHAR: "CHAR"i
CHARACTER: "CHARACTER"i
CHAR_LENGTH: "CHAR_LENGTH"i
CHARACTER_LENGTH: "CHARACTER_LENGTH"i
CHECK: "CHECK"i
CLOSE: "CLOSE"i
COALESCE: "COALESCE"i
COLLATE: "COLLATE"i
COLLATION: "COLLATION"i
COLUMN: "COLUMN"i
COMMIT: "COMMIT"i
CONNECT: "CONNECT"i
CONNECTION: "CONNECTION"i
CONSTRAINT: "CONSTRAINT"i
CONSTRAINTS: "CONSTRAINTS"i
CONTINUE: "CONTINUE"i
CONVERT: "CONVERT"i
CORRESPONDING: "CORRESPONDING"i
COUNT: "COUNT"i
CREATE: "CREATE"i
CROSS: "CROSS"i
CURRENT: "CURRENT"i
CURRENT_DATE: "CURRENT_DATE"i
CURRENT_TIME: "CURRENT_TIME"i
CURRENT_TIMESTAMP: "CURRENT_TIMESTAMP"i
CURRENT_USER: "CURRENT_USER"i
CURSOR: "CURSOR"i
DATE: "DATE"i
DAY: "DAY"i
DEALLOCATE: "DEALLOCATE"i
DECIMAL: "DECIMAL"i
DECLARE: "DECLARE"i
DEFAULT: "DEFAULT"i
DEFERRABLE: "DEFERRABLE"i
DEFERRED: "DEFERRED"i
DELETE: "DELETE"i
DESC: "DESC"i
DESCRIBE: "DESCRIBE"i
DESCRIPTOR: "DESCRIPTOR"i
DIAGNOSTICS: "DIAGNOSTICS"i
DISCONNECT: "DISCONNECT"i
DISTINCT: "DISTINCT"i
DOMAIN: "DOMAIN"i
DOUBLE: "DOUBLE"i
DROP: "DROP"i
ELSE: "ELSE"i
END: "END"i
END_EXEC: "END-EXEC"i
ESCAPE: "ESCAPE"i
EXCEPT: "EXCEPT"i
EXCEPTION: "EXCEPTION"i
EXEC: "EXEC"i
EXECUTE: "EXECUTE"i
EXISTS: "EXISTS"i
EXTERNAL: "EXTERNAL"i
EXTRACT: "EXTRACT"i
FALSE: "FALSE"i
FETCH: "FETCH"i
FIRST: "FIRST"i
FLOAT: "FLOAT"i
FOR: "FOR"i
FOREIGN: "FOREIGN"i
FOUND: "FOUND"i
FROM: "FROM"i
FULL: "FULL"i
GET: "GET"i
GLOBAL: "GLOBAL"i
GO: "GO"i
GOTO: "GOTO"i
GRANT: "GRANT"i
GROUP: "GROUP"i
HAVING: "HAVING"i
HOUR: "HOUR"i
IDENTITY: "IDENTITY"i
IMMEDIATE: "IMMEDIATE"i
IN: "IN"i
INDICATOR: "INDICATOR"i
INITIALLY: "INITIALLY"i
INNER: "INNER"i
INPUT: "INPUT"i
INSENSITIVE: "INSENSITIVE"i
INSERT: "INSERT"i
INT: "INT"i
INTEGER: "INTEGER"i
INTERSECT: "INTERSECT"i
INTERVAL: "INTERVAL"i
INTO: "INTO"i
IS: "IS"i
ISOLATION: "ISOLATION"i
JOIN: "JOIN"i
KEY: "KEY"i
LANGUAGE: "LANGUAGE"i
LAST: "LAST"i
LEADING: "LEADING"i
LEFT: "LEFT"i
LEVEL: "LEVEL"i
LIKE: "LIKE"i
LOCAL: "LOCAL"i
LOWER: "LOWER"i
MATCH: "MATCH"i
MAX: "MAX"i
MIN: "MIN"i
MINUTE: "MINUTE"i
MODULE: "MODULE"i
MONTH: "MONTH"i
NAMES: "NAMES"i
NATIONAL: "NATIONAL"i
NATURAL: "NATURAL"i
NCHAR: "NCHAR"i
NEXT: "NEXT"i
NO: "NO"i
NOT: "NOT"i
NULL: "NULL"i
NULLIF: "NULLIF"i
NUMERIC: "NUMERIC"i
OCTET_LENGTH: "OCTET_LENGTH"i
OF: "OF"i
ON: "ON"i
ONLY: "ONLY"i
OPEN: "OPEN"i
OPTION: "OPTION"i
OR: "OR"i
ORDER: "ORDER"i
OUTER: "OUTER"i
OUTPUT: "OUTPUT"i
OVERLAPS: "OVERLAPS"i
PAD: "PAD"i
PARTIAL: "PARTIAL"i
POSITION: "POSITION"i
PRECISION: "PRECISION"i
PREPARE: "PREPARE"i
PRESERVE: "PRESERVE"i
PRIMARY: "PRIMARY"i
PRIOR: "PRIOR"i
PRIVILEGES: "PRIVILEGES"i
PROCEDURE: "PROCEDURE"i
PUBLIC: "PUBLIC"i
READ: "READ"i
REAL: "REAL"i
REFERENCES: "REFERENCES"i
RELATIVE: "RELATIVE"i
RESTRICT: "RESTRICT"i
REVOKE: "REVOKE"i
RIGHT: "RIGHT"i
ROLLBACK: "ROLLBACK"i
ROWS: "ROWS"i
SCHEMA: "SCHEMA"i
SCROLL: "SCROLL"i
SECOND: "SECOND"i
SECTION: "SECTION"i
SELECT: "SELECT"i
SESSION: "SESSION"i
SESSION_USER: "SESSION_USER"i
SET: "SET"i
SIZE: "SIZE"i
SMALLINT: "SMALLINT"i
SOME: "SOME"i
SPACE: "SPACE"i
SQL: "SQL"i
SQLCODE: "SQLCODE"i
SQLERROR: "SQLERROR"i
SQLSTATE: "SQLSTATE"i
SUBSTRING: "SUBSTRING"i
SUM: "SUM"i
SYSTEM_USER: "SYSTEM_USER"i
TABLE: "TABLE"i
TEMPORARY: "TEMPORARY"i
THEN: "THEN"i
TIME: "TIME"i
TIMESTAMP: "TIMESTAMP"i
TIMEZONE_HOUR: "TIMEZONE_HOUR"i
TIMEZONE_MINUTE: "TIMEZONE_MINUTE"i
TO: "TO"i
TRAILING: "TRAILING"i
TRANSACTION: "TRANSACTION"i
TRANSLATE: "TRANSLATE"i
TRANSLATION: "TRANSLATION"i
TRIM: "TRIM"i
TRUE: "TRUE"i
UNION: "UNION"i
UNIQUE: "UNIQUE"i
UNKNOWN: "UNKNOWN"i
UPDATE: "UPDATE"i
UPPER: "UPPER"i
USAGE: "USAGE"i
USER: "USER"i
USING: "USING"i
VALUE: "VALUE"i
VALUES: "VALUES"i
VARCHAR: "VARCHAR"i
VARYING: "VARYING"i
VIEW: "VIEW"i
WHEN: "WHEN"i
WHENEVER: "WHENEVER"i
WHERE: "WHERE"i
WITH: "WITH"i
WORK: "WORK"i
WRITE: "WRITE"i
YEAR: "YEAR"i
ZONE: "ZONE"i

SQL_RESERVED_WORD : ABSOLUTE
    | ACTION
    | ADD
    | ALL
    | ALLOCATE
    | ALTER
    | AND
    | ANY
    | ARE
    | AS
    | ASC
    | ASSERTION
    | AT
    | AUTHORIZATION
    | AVG
    | BEGIN
    | BETWEEN
    | BIT
    | BIT_LENGTH
    | BOTH
    | BY
    | CASCADE
    | CASCADED
    | CASE
    | CAST
    | CATALOG
    | CHAR
    | CHARACTER
    | CHAR_LENGTH
    | CHARACTER_LENGTH
    | CHECK
    | CLOSE
    | COALESCE
    | COLLATE
    | COLLATION
    | COLUMN
    | COMMIT
    | CONNECT
    | CONNECTION
    | CONSTRAINT
    | CONSTRAINTS
    | CONTINUE
    | CONVERT
    | CORRESPONDING
    | COUNT
    | CREATE
    | CROSS
    | CURRENT
    | CURRENT_DATE
    | CURRENT_TIME
    | CURRENT_TIMESTAMP
    | CURRENT_USER
    | CURSOR
    | DATE
    | DAY
    | DEALLOCATE
    | DECIMAL
    | DECLARE
    | DEFAULT
    | DEFERRABLE
    | DEFERRED
    | DELETE
    | DESC
    | DESCRIBE
    | DESCRIPTOR
    | DIAGNOSTICS
    | DISCONNECT
    | DISTINCT
    | DOMAIN
    | DOUBLE
    | DROP
    | ELSE
    | END
    | END_EXEC
    | ESCAPE
    | EXCEPT
    | EXCEPTION
    | EXEC
    | EXECUTE
    | EXISTS
    | EXTERNAL
    | EXTRACT
    | FALSE
    | FETCH
    | FIRST
    | FLOAT
    | FOR
    | FOREIGN
    | FOUND
    | FROM
    | FULL
    | GET
    | GLOBAL
    | GO
    | GOTO
    | GRANT
    | GROUP
    | HAVING
    | HOUR
    | IDENTITY
    | IMMEDIATE
    | IN
    | INDICATOR
    | INITIALLY
    | INNER
    | INPUT
    | INSENSITIVE
    | INSERT
    | INT
    | INTEGER
    | INTERSECT
    | INTERVAL
    | INTO
    | IS
    | ISOLATION
    | JOIN
    | KEY
    | LANGUAGE
    | LAST
    | LEADING
    | LEFT
    | LEVEL
    | LIKE
    | LOCAL
    | LOWER
    | MATCH
    | MAX
    | MIN
    | MINUTE
    | MODULE
    | MONTH
    | NAMES
    | NATIONAL
    | NATURAL
    | NCHAR
    | NEXT
    | NO
    | NOT
    | NULL
    | NULLIF
    | NUMERIC
    | OCTET_LENGTH
    | OF
    | ON
    | ONLY
    | OPEN
    | OPTION
    | OR
    | ORDER
    | OUTER
    | OUTPUT
    | OVERLAPS
    | PAD
    | PARTIAL
    | POSITION
    | PRECISION
    | PREPARE
    | PRESERVE
    | PRIMARY
    | PRIOR
    | PRIVILEGES
    | PROCEDURE
    | PUBLIC
    | READ
    | REAL
    | REFERENCES
    | RELATIVE
    | RESTRICT
    | REVOKE
    | RIGHT
    | ROLLBACK
    | ROWS
    | SCHEMA
    | SCROLL
    | SECOND
    | SECTION
    | SELECT
    | SESSION
    | SESSION_USER
    | SET
    | SIZE
    | SMALLINT
    | SOME
    | SPACE
    | SQL
    | SQLCODE
    | SQLERROR
    | SQLSTATE
    | SUBSTRING
    | SUM
    | SYSTEM_USER
    | TABLE
    | TEMPORARY
    | THEN
    | TIME
    | TIMESTAMP
    | TIMEZONE_HOUR
    | TIMEZONE_MINUTE
    | TO
    | TRAILING
    | TRANSACTION
    | TRANSLATE
    | TRANSLATION
    | TRIM
    | TRUE
    | UNION
    | UNIQUE
    | UNKNOWN
    | UPDATE
    | UPPER
    | USAGE
    | USER
    | USING
    | VALUE
    | VALUES
    | VARCHAR
    | VARYING
    | VIEW
    | WHEN
    | WHENEVER
    | WHERE
    | WITH
    | WORK
    | WRITE
    | YEAR
    | ZONE


AMPERSAND: "&"
ASTERISK: "*"
COLON: ":"
COMMA: ","
CONCATENATION_OPERATOR: "||"
DOUBLE_PERIOD: ".."
DOUBLE_QUOTE: "\""
EQUALS_OPERATOR: "="
GREATER_THAN_OPERATOR: ">"
GREATER_THAN_OR_EQUALS_OPERATOR: ">="
LEFT_BRACKET: "["
LEFT_PAREN: "("
LESS_THAN_OPERATOR: "<"
LESS_THAN_OR_EQUALS_OPERATOR: "<="
MINUS_SIGN: "-"
NOT_EQUALS_OPERATOR1: "<>"
NOT_EQUALS_OPERATOR2: "!="
PERCENT: "%"
PERIOD: "."
PLUS_SIGN: "+"
QUESTION_MARK: "?"
QUOTE: "'"
RIGHT_BRACKET: "]"
RIGHT_PAREN: ")"
SEMICOLON: ";"
SOLIDUS: "/"
UNDERSCORE: "_"
VERTICAL_BAR: "|"

SQL_SPECIAL_CHARACTER: AMPERSAND
    | ASTERISK
    | COLON
    | COMMA
    | CONCATENATION_OPERATOR
    | DOUBLE_PERIOD
    | DOUBLE_QUOTE
    | EQUALS_OPERATOR
    | GREATER_THAN_OPERATOR
    | GREATER_THAN_OR_EQUALS_OPERATOR
    | LEFT_BRACKET
    | LEFT_PAREN
    | LESS_THAN_OPERATOR
    | LESS_THAN_OR_EQUALS_OPERATOR
    | MINUS_SIGN
    | NOT_EQUALS_OPERATOR1
    | NOT_EQUALS_OPERATOR2
    | PERCENT
    | PERIOD
    | PLUS_SIGN
    | QUESTION_MARK
    | QUOTE
    | RIGHT_BRACKET
    | RIGHT_PAREN
    | SEMICOLON
    | SOLIDUS
    | UNDERSCORE
    | VERTICAL_BAR

approximate_numeric_literal: mantissa EXPONENT

area: AREA "(" _geometry_value_expression ")"

as_clause: "AS" column_name

between_predicate: _value_expression [NOT] BETWEEN _value_expression AND _value_expression

_boolean_factor: [NOT] _boolean_primary

_boolean_primary: "(" search_condition ")"
    | _predicate

_boolean_term: _boolean_factor
    | _boolean_term AND _boolean_factor

box: BOX "(" coord_sys "," coordinates "," _numeric_value_expression "," _numeric_value_expression ")"

catalog_name: _identifier

centroid: CENTROID "(" _geometry_value_expression ")"

_character_factor : _character_primary

_character_primary:
    | string_value_function
    | _value_expression_primary
    | _general_literal

_character_representation: /[^"\'\']+/

_character_string_literal: "'" (_character_representation)* "'" (separator* "'" (_character_representation)* "'")*

_character_value_expression: concatenation | _character_factor

circle: CIRCLE "(" coord_sys "," coordinates "," radius ")"

column_name: _identifier
column_name_list: column_name ("," column_name)*
column_reference: [_qualifier "." ] column_name

comment: comment_introducer (comment_character)* NEWLINE
comment_character: nonquote_character | QUOTE
comment_introducer: MINUS_SIGN MINUS_SIGN (MINUS_SIGN)*

COMP_OP: EQUALS_OPERATOR
    | NOT_EQUALS_OPERATOR
    | LESS_THAN_OPERATOR
    | GREATER_THAN_OPERATOR
    | LESS_THAN_OR_EQUALS_OPERATOR
    | GREATER_THAN_OR_EQUALS_OPERATOR

comparison_predicate: _value_expression COMP_OP _value_expression

concatenation: _character_value_expression CONCATENATION_OPERATOR _character_factor

contains: CONTAINS "(" _geometry_value_expression "," _geometry_value_expression ")"

coord1: COORD1 "(" _geometry_value_expression ")"
coord2: COORD2 "(" _geometry_value_expression ")"
coord_sys: _string_value_expression
coord_value: point | column_reference

coordinate1: _numeric_value_expression
coordinate2: _numeric_value_expression
coordinates: coordinate1 "," coordinate2

correlation_name: _identifier
correlation_specification: "AS" correlation_name

default_function_prefix: "UDF"

_delimited_identifier: "\"" _delimited_identifier_body "\""
_delimited_identifier_body: _delimited_identifier_part*
_delimited_identifier_part: /[^"]+/ | "\"\""

delimiter_token: _character_string_literal
    | _delimited_identifier
    | SQL_SPECIAL_CHARACTER
    | NOT_EQUALS_OPERATOR
    | GREATER_THAN_OR_EQUALS_OPERATOR
    | LESS_THAN_OR_EQUALS_OPERATOR
    | CONCATENATION_OPERATOR
    | DOUBLE_PERIOD
    | LEFT_BRACKET
    | RIGHT_BRACKET

derived_column: _value_expression [as_clause]
derived_table: table_subquery

distance: DISTANCE "(" coord_value "," coord_value ")"

DOUBLE_QUOTE_SYMBOL: DOUBLE_QUOTE DOUBLE_QUOTE

_exact_numeric_literal: UNSIGNED_INTEGER ["."  [UNSIGNED_INTEGER]]
    | "."  UNSIGNED_INTEGER

exists_predicate: EXISTS table_subquery

extract_coordsys: COORDSYS "(" _geometry_value_expression ")"

_factor: [SIGN] _numeric_primary

from_clause: "FROM"i table_reference ("," table_reference)*

_general_literal: _character_string_literal

general_set_function: SET_FUNCTION_TYPE "(" [SET_QUANTIFIER] _value_expression ")"

_geometry_value_expression: _value_expression_primary | _geometry_value_function
_geometry_value_function: box
    | centroid
    | circle
    | point
    | polygon
    | region

group_by_clause: GROUP BY grouping_column_reference_list
grouping_column_reference: column_reference
grouping_column_reference_list: grouping_column_reference ("," grouping_column_reference)*

having_clause: HAVING search_condition

_identifier: _regular_identifier | _delimited_identifier

in_predicate: _value_expression [NOT] IN in_predicate_value

in_predicate_value: table_subquery
    | "(" in_value_list ")"

in_value_list: _value_expression ("," _value_expression)*

intersects: INTERSECTS "(" _geometry_value_expression "," _geometry_value_expression ")"

join_column_list: column_name_list

join_condition: ON search_condition

join_specification: join_condition | named_columns_join

join_type: INNER | OUTER_JOIN_TYPE [OUTER]

joined_table: qualified_join | "(" joined_table ")"

keyword: SQL_RESERVED_WORD | ADQL_RESERVED_WORD

like_predicate: _character_value_expression [NOT] LIKE pattern

mantissa: _exact_numeric_literal


math_function: ABS "(" _numeric_value_expression ")"
    | CEILING "(" _numeric_value_expression ")"
    | DEGREES "(" _numeric_value_expression ")"
    | EXP "(" _numeric_value_expression ")"
    | FLOOR "(" _numeric_value_expression ")"
    | LOG "(" _numeric_value_expression ")"
    | LOG10 "(" _numeric_value_expression ")"
    | MOD "(" _numeric_value_expression "," _numeric_value_expression ")"
    | PI "(" ")"
    | POWER "(" _numeric_value_expression "," _numeric_value_expression ")"
    | RADIANS "(" _numeric_value_expression ")"
    | RAND "(" [_numeric_value_expression] ")"
    | ROUND "(" _numeric_value_expression ["," SIGNED_INTEGER] ")"
    | SQRT "(" _numeric_value_expression ")"
    | TRUNCATE "(" _numeric_value_expression ["," SIGNED_INTEGER] ")"

minor_radius: _numeric_value_expression

named_columns_join: USING "(" join_column_list ")"

non_predicate_geometry_function: area
    | coord1
    | coord2
    | distance

nondelimiter_token: _regular_identifier
    | keyword
    | _unsigned_numeric_literal

_nondoublequote_character: /[^"]/
nonquote_character: /[^']/

NOT_EQUALS_OPERATOR: NOT_EQUALS_OPERATOR1 | NOT_EQUALS_OPERATOR2

null_predicate: column_reference IS [NOT] NULL

numeric_geometry_function: predicate_geometry_function
    | non_predicate_geometry_function

_numeric_primary: _value_expression_primary
    | numeric_value_function

_numeric_value_expression: _term
    | _numeric_value_expression PLUS_SIGN _term
    | _numeric_value_expression MINUS_SIGN _term

numeric_value_function: trig_function
    | math_function
    | numeric_geometry_function
    | user_defined_function

order_by_clause: ORDER BY sort_specification_list
ORDERING_SPECIFICATION: ASC | DESC

OUTER_JOIN_TYPE : LEFT | RIGHT | FULL

pattern: _character_value_expression

point: POINT "(" coord_sys "," coordinates ")"

polygon: POLYGON "(" coord_sys "," coordinates "," coordinates ("," coordinates)* ")"

_predicate: comparison_predicate
    | between_predicate
    | in_predicate
    | like_predicate
    | null_predicate
    | exists_predicate

predicate_geometry_function: contains | intersects

qualified_join: table_reference [NATURAL] [join_type] JOIN table_reference [join_specification]

_qualifier: table_name | correlation_name

query_expression: query_specification
    | joined_table

query_specification: "SELECT"i [SET_QUANTIFIER] [set_limit] select_list table_expression

quote_symbol: QUOTE QUOTE

radius: _numeric_value_expression

region: REGION "(" _string_value_expression ")"

_regular_identifier: /[a-zA-Z]+[a-zA-Z0-9_]*/

schema_name: [catalog_name "." ] unqualified_schema_name

search_condition: _boolean_term
    | search_condition OR _boolean_term

select_list: ASTERISK
    | _select_sublist ("," _select_sublist)*

_select_sublist: derived_column
    | _qualifier "."  ASTERISK

separator: (comment | " " | NEWLINE)*

set_function_specification: COUNT "(" ASTERISK ")"
    | general_set_function

SET_FUNCTION_TYPE: AVG | MAX | MIN | SUM | COUNT

set_limit: "TOP"i UNSIGNED_INTEGER

SET_QUANTIFIER: ALL | DISTINCT

SIGN : PLUS_SIGN | MINUS_SIGN

sort_key: column_name | UNSIGNED_INTEGER

sort_specification: sort_key [ORDERING_SPECIFICATION]
sort_specification_list: sort_specification ("," sort_specification)*

string_geometry_function: extract_coordsys
_string_value_expression: _character_value_expression
string_value_function: string_geometry_function | user_defined_function

subquery: "(" query_expression ")"

table_expression: from_clause [where_clause] [group_by_clause] [having_clause] [order_by_clause]

table_name: [schema_name "." ] _identifier
unqualified_table_name: _identifier

?table_reference: table_name [correlation_specification]
    | derived_table correlation_specification
    | joined_table

table_subquery: subquery

_term: _factor
    | _term ASTERISK _factor
    | _term SOLIDUS _factor

trig_function: ACOS "(" _numeric_value_expression ")"
    | ASIN "(" _numeric_value_expression ")"
    | ATAN "(" _numeric_value_expression ")"
    | ATAN2 "(" _numeric_value_expression "," _numeric_value_expression ")"
    | COS "(" _numeric_value_expression ")"
    | SIN "(" _numeric_value_expression ")"
    | TAN "(" _numeric_value_expression ")"

unqualified_schema_name : _identifier

_unsigned_literal: _unsigned_numeric_literal

_unsigned_numeric_literal: _exact_numeric_literal
    | approximate_numeric_literal

_unsigned_value_specification: _unsigned_literal

user_defined_function: user_defined_function_name "(" [user_defined_function_param ["," user_defined_function_param]*] ")"

user_defined_function_name: [default_function_prefix] _regular_identifier
user_defined_function_param: _value_expression

_value_expression:
    | _numeric_value_expression
    | _geometry_value_expression
    | _string_value_expression

_value_expression_primary: _unsigned_value_specification
    | column_reference
    | set_function_specification
    | "(" _value_expression ")"

where_clause: "WHERE"i search_condition

%import common.WS
%import common.LETTER -> SIMPLE_LATIN_LETTER
%import common.DIGIT
%import common.LCASE_LETTER -> SIMPLE_LATIN_LOWER_CASE_LETTER
%import common.UCASE_LETTER -> SIMPLE_LATIN_UPPER_CASE_LETTER
%import common.INT -> UNSIGNED_INTEGER
%import common.SIGNED_INT -> SIGNED_INTEGER
%import common._EXP -> EXPONENT
%import common.NEWLINE
%ignore WS