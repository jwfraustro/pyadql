<queries>
  <contact>
    <name>Jon Juaristi Campillo</name>
    <url>mailto:juaristi@uni-heidelberg.de</url>
  </contact>
  <publisher>
    <name>Heidelberg GAVO Data Center</name>
    <url>http://dc.g-vo.org</url>
  </publisher>
  <description>ADQL whitespace and related trivial syntax test queries</description>
  <query uuid="ccd99070-4508-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="false" version="adql-2.1">selectxfromywherePoint(NULL,2,3)=x
</adql>
  </query>
    <query uuid="d2ed137e-4508-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="false" version="adql-2.1">select x fromy where Point('fk5', 2, 3)=x
</adql>
  </query>
  <query uuid="d8ad7880-4508-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="false" version="adql-2.1">select x from y whereCIRCLE('fk5', 2, 3, 3)=x
</adql>
  </query>
  <query uuid="ac69f1be-a01a-4093-b49d-1d6d1898aed1">
    <description>Simple whitespace predicates</description>
    <adql valid="true" version="adql-2.1">select ROUND(5)as x from y
</adql>
  </query>
  <query uuid="dcec62bc-4508-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="true" version="adql-2.1">select x from y where box( 'fk5', 2, 3, 3, 0 ) = x
</adql>
  </query>
<query uuid="f0532c00-4508-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="true" version="adql-2.1">select x from y where CENTROID( CIRCLE('fk4', 2, 3, 3) )=x
</adql>
  </query>
    <query uuid="000d56ac-4509-11e6-b60c-9d2c33f9b7a2">
    <description>Invalid simple whitespace predicates</description>
    <adql valid="false" version="adql-2.1">select x from y where Point ('fk5',2,3)
</adql>
  </query>
<query uuid="0996bf74-4509-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="true" version="adql-2.1">select x from y where CIRCLE( 'fk5', 2, 3, 7 ) =x
</adql>
  </query>
  <query uuid="0dc25eaa-4509-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="true" version="adql-2.1">select x from y where POLYGON( 'fk5' , 2 , 3 , 3 , 0 , 23 , 0 , 45, 11 ) = x
</adql>
</query>
 <query uuid="118c7d86-4509-11e6-b60c-9d2c33f9b7a2">
    <description>Simple whitespace predicates</description>
    <adql valid="true" version="adql-2.1">select x from y where ROUND( 3 )=x
</adql>
  </query>
  <query uuid="e48c4834-450d-11e6-b20b-6d529bdffd4c">
    <description>misc bad queries for error message optimization</description>
	<adql valid="true" version="adql-2.1">SELECT POINT( 'ICRS' , 3, 4) FROM z
</adql>
  </query>
   <query uuid="72395eda-4cff-11e6-866d-736653f6053b">
    <description>misc statements</description>
    <adql valid="true" version="adql-2.1">select round(x,2)as a, truncate(x,-2)as b from foo
</adql>
  </query>
  <query uuid="963253e6-4cff-11e6-866d-736653f6053b">
    <description>triple join</description>
    <adql valid="true" version="adql-2.1">SELECT ra1, dec, mass FROM
	( SELECT * FROM spatial ) as q LEFT OUTER JOIN spatial2
		USING ( ra1, dist ) JOIN misc ON ( dist=mass )
</adql>
  </query>
  <query uuid="b0b1b018-4cff-11e6-866d-736653f6053b">
    <description>comma join with subquery</description>
    <adql valid="true" version="adql-2.1">SELECT ra1, dec, mass FROM
	( spatial join spatial2 using (ra1) ), misc
</adql>
  </query>
  <query uuid="092d9d96-4d01-11e6-9a71-e546d984d6dc">
    <description>wild whitespace</description>
    <adql valid="true" version="adql-2.1">select		distinct top


    10 x, y from foo
</adql>
  </query>
  <query uuid="2ed3d060-4d01-11e6-9a71-e546d984d6dc">
    <description>misc numerics</description>
    <adql valid="true" version="adql-2.1">select log10(x), log(x), rand(), rand(5), 
			TRUNCATE(x), TRUNCATE(x,3) from foo
</adql>
  </query>  
  <query uuid="7f399b5c-4d01-11e6-9a71-e546d984d6dc">
    <description>column reference from tap upload</description>
	<adql valid="true" version="adql-2.1">select TAP_UPLOAD.
		abc
		.c from TAP_UPLOAD
		.
		abc
</adql>
  </query>
<query uuid="61b37638-4d02-11e6-87b5-4131381c4631"><description>star and subquery</description><adql valid="false" version="adql-2.1">select * from spatial join 
	(select ra1+dec, dist-2 as foo, dec from spatial2 offset 0) as q"
	ON ( width = dec )
</adql></query>
<query uuid="06271338-8060-45f9-9456-d38c89024346"><description>star and subquery</description><adql valid="true" version="adql-2.1">select * from spatial join 
		(
		select ra1+dec, 
		dist-2 as foo, dec from spatial2 
		offset 0) 
		as q
		ON ( 
		width = dec )
</adql></query>
<query uuid="7e1c042a-4d02-11e6-a088-7368e607ac72"><description>with set limit</description><adql valid="true" version="adql-2.1">select top 3 * from x 
		union (
		select top 40 a from y 
			except select * from z
		)
</adql></query>
<query uuid="8f1cd39e-4d02-11e6-a088-7368e607ac72"><description>deep set limit</description><adql valid="true" version="adql-2.1">select * from (
		select TOP 30 * from x
		) as q 
		union
		select TOP 4 * from u
	</adql></query>
<query uuid="a7a9d518-4458-11e6-96e2-28b2bdcff70b">
    <description>Various join forms</description>
	<adql valid="true" version="adql-2.1">select x from t1, t2, t3 WHERE 
		t1
		.
		x
		=
		t2
		.
		y
</adql>
  </query> 
  <query uuid="cfba5f6e-4458-11e6-96e2-28b2bdcff70b">
    <description>Various join forms</description>
	<adql valid="true" version="adql-2.1">select x from t1 FULL OUTER JOIN t2 USING (
		x,
		y
	)
</adql>
  </query>
  <query uuid="d4c3a72c-4458-11e6-96e2-28b2bdcff70b">
    <description>Various join forms</description>
	<adql valid="true" version="adql-2.1">select x from t1 INNER JOIN (t2
		JOIN
		t3)
</adql>
  </query>
  <query uuid="dbef92f4-4458-11e6-96e2-28b2bdcff70b">
    <description>Various join forms</description>
	<adql valid="true" version="adql-2.1">select x from (
		t1 JOIN t4
		) FULL OUTER JOIN (
		t2 JOIN t3
		)
</adql></query>
   <query uuid="4bce84c2-4cfb-11e6-9064-032db3af9290">
    <description>metadata inference samples</description>
	<adql valid="true" version="adql-2.1">SELECT LOWER( 
		'foo'
		), 
		LOWER(
		version
		) from crazy
</adql>
  </query>
  <query uuid="9807aabc-4cfb-11e6-9064-032db3af9290">
    <description>metadata inference samples</description>
	<adql valid="true" version="adql-2.1">select flag 
		|| 
		'ab'as cat from crazy
</adql>
  </query>
    <query uuid="1de9c3c6-4cfd-11e6-9064-032db3af9290">
    <description>metadata inference samples with joins</description>
	<adql valid="true" version="adql-2.1">SELECT * FROM misc JOIN (SELECT TOP 3 * FROM crazy) AS q ON (
		mag 
		=
		q
		.
		ct
		)
</adql>
  </query> 
  <query uuid="e91ce10e-4cfd-11e6-9064-032db3af9290">
    <description>metadata inference samples with joins</description>
    <adql valid="true" version="adql-2.1">SELECT ct FROM crazy JOIN ( 
  SELECT height FROM spatial
  JOIN spatial2 ON (
  ra2=dist
  )
    GROUP BY height
    HAVING (height&gt;avg(dist))) AS q 
	ON ( 
	wot=height
	)
</adql>
  </query>
  <query uuid="82cd2052-4cfe-11e6-80a3-9f00be0ba8f9">
    <description>uploaded tables</description>
	<adql valid="true" version="adql-2.1">select alpha, rv from TAP_UPLOAD
		.
		adql
</adql>
  </query>
  <query uuid="1281cf42-450a-11e6-a82a-4fe7326f7d72">
    <description>invalid simple subqueries</description>
	<adql valid="true" version="adql-2.1">select a,
		b 
		from 
		( select * from x ) 
		q
</adql>
  </query>
  <query uuid="1f5d27dc-450c-11e6-8564-332de33a5c03">
    <description>subqueries join</description>
    <adql valid="true" version="adql-2.1">select * from ( select * from urks.a, b, ( select * from c, monk.d ) as q ) as r join ( select * from x, y ) as p
</adql>
  </query>

  <query uuid="1f5d27dc-450c-11e6-8564-332de33a5c13">
  	<description>non-blank characters can delimit reserved words</description>
  	<adql valid="true">
  		select all(a+b)X from 
  			most,(anything join else3 ON(a BETWEEN(b+and7)AND 4))
  	</adql>
  </query>

  <query uuid="a66c56e6-f18d-11e8-96df-28d244962ad0">
  	<description>No mandatory whitespace in AS-less corr spec.</description>
  	<adql valid="true">
  		select top 4* from (select * from amanda.nucand)x
  	</adql>
  </query>

  <query uuid="a66c56e6-f18d-11e8-96df-28d244962ae0">
  	<description>Group by internal whitespace</description>
  	<adql valid="true">
  		select * from bar group   by foo
  	</adql>
  </query>

  <query uuid="a66c56e6-f18d-11e8-96df-28d244962af0">
  	<description>Order by internal whitespace and stuck sort direction </description>
  	<adql valid="true">
  		select * from bar order   by foo asc, 2desc
  	</adql>
  </query>

  <query uuid="a66c56e6-f18d-11e8-96df-28d244962ad1">
  	<description>Balanced queries in HAVING</description>
  	<adql valid="false">
  		select * from a group by d having (d>2
  	</adql>
  </query>

</queries>
